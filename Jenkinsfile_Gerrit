#!/usr/bin/env groovy

String VERSION = "1.0.0"
String BRANCH = env.BRANCH

pipeline {
    agent {
        node {
            label 'linux'
        }
    }
    triggers {
        gerrit(
            gerritProjects: [[
                compareType : 'PLAIN',
                pattern     : 'spring-petclinic',
                branches    : [[ compareType: 'PLAIN', pattern: BRANCH ]]
            ]],
            triggerOnEvents: [ changeMerged() ]
        )
    }
    options {
        buildDiscarder(logRotator(numToKeepStr: '30', artifactNumToKeepStr: '30'))
    }
    stages {
        stage("Checkout"){
            steps {
                checkout scm
                script {
                    sshagent (credentials: ['jenkinsSSH']) {
                        sh """git fetch --tags"""
                    }
                }
            }
        }
        stage("Setup"){
            steps {
                script {
                    VERSION = sh(script:"""git describe --tags""", returnStdout: true).trim()
                }
                sh """
                    sed -i "s/DEV-BUILD/$VERSION/" pom.xml
                """
            }
        }
        stage("Package"){
            steps {
                sh """
                    ./mvnw package
                """
            }
        }
        stage("Docker Build"){
            steps {
                sh """
                    export VERSION=$VERSION
                    docker-compose build app
                    #docker-compose push app
                """
            }
        }
        stage("Deploy"){
            steps {
                sh """
                    export VERSION=$VERSION
                    docker-compose pull mysql
                    docker stack deploy --compose-file docker-compose.yaml petclinic
                """
            }
        }
    }
}

